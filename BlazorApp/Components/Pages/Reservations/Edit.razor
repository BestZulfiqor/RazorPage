@page "/reservations/edit/{id:int}"
@using System.Net
@using Domain.DTOs.Reservations
@using Infrastructure.Interfaces
@rendermode InteractiveServer
@inject IReservationService ReservationService
@inject NavigationManager Navigation

<h3>Edit reservation</h3>

<EditForm Model="@reservation" OnValidSubmit="@SaveTable">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label class="form-label">Customer Id</label>
        <InputNumber class="form-control" @bind-Value="reservation.CustomerId"/>
        <ValidationMessage For="@(() => reservation.CustomerId)" TValue="int"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Table id</label>
        <InputNumber class="form-control" @bind-Value="reservation.TableId"/>
        <ValidationMessage For="@(() => reservation.TableId)" TValue="int"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Reservation date</label>
        <InputDate @bind-Value="reservation.ReservationDate"/>
        <ValidationMessage For="@(() => reservation.ReservationDate)" TValue="DateTimeOffset"/>
    </div>
    
    <div class="mt-4">
        <button type="submit" class="btn btn-primary me-2">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code{
    [Parameter]
    public int Id { get; set; }
    private GetReservationDto reservation = new();
    private string errorMessage = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var response = await ReservationService.GetReservationByIdAsync(Id);
        reservation = response.Data!;
    }
    
    private async Task SaveTable()
    {
        try
        {
            var updateTableDto = new UpdateReservationDto()
            {
                Id = reservation.Id,
                CustomerId = reservation.CustomerId,
                ReservationDate= reservation.ReservationDate,
                TableId= reservation.TableId
            };
            var response = await ReservationService.UpdateReservationAsync(updateTableDto.Id, updateTableDto);
            if (!response.IsSuccess)
            {
                errorMessage = response.Message!;
                return;
            }
            Navigation.NavigateTo("/reservations");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
            Console.WriteLine(e);
            throw;  
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/reservations");
    }

}
