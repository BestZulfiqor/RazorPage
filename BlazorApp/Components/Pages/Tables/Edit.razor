@page "/tables/edit/{id:int}"
@using System.Net
@using Domain.DTOs.Tables
@using Infrastructure.Interfaces
@rendermode InteractiveServer
@inject ITableService TableService
@inject NavigationManager Navigation

<h3>Edit table</h3>

<EditForm Model="@table" OnValidSubmit="@SaveTable">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label class="form-label">Number</label>
        <InputNumber class="form-control" @bind-Value="table.Number"/>
        <ValidationMessage For="@(() => table.Number)" TValue="int"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Seats</label>
        <InputNumber class="form-control" @bind-Value="table.Seats"/>
        <ValidationMessage For="@(() => table.Seats)" TValue="int"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Reserved status</label>
        <InputCheckbox class="form-check-input" @bind-Value="table.IsReserved"/>
        <ValidationMessage For="@(() => table.IsReserved)" TValue="bool"/>
    </div>
    
    <div class="mt-4">
        <button type="submit" class="btn btn-primary me-2">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code{
    [Parameter]
    public int Id { get; set; }
    private GetTableDto table = new();
    private string errorMessage = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var response = await TableService.GetTableByIdAsync(Id);
        table = response.Data!;
    }
    
    private async Task SaveTable()
    {
        try
        {
            var updateTableDto = new UpdateTableDto()
            {
                Id = table.Id,
                Number = table.Number,
                Seats = table.Seats,
                IsReserved = table.IsReserved
            };
            var response = await TableService.UpdateTableAsync(updateTableDto.Id, updateTableDto);
            if (!response.IsSuccess)
            {
                errorMessage = response.Message!;
                return;
            }
            Navigation.NavigateTo("/tables");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
            Console.WriteLine(e);
            throw;  
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/tables");
    }

}
